import { IntroduceDataType } from "@/types/type";

const introduceData: IntroduceDataType[] = [
    {
        title: "팀워크 및 리더십",
        detail: "",
        content: [
            "대학 소프트웨어 동아리 활동 및 운영",
            "다양한 프로젝트의 **팀장 역할 수행 및 15건의 수상 경험**",
            "동아리원 대상으로 C언어 및 개발 **세미나를 정기적 진행**하여 **개발 언어 및 프로젝트 이해도 향상에 기여**",
            "동아리 내 일정 파편화를 개선하기 위해 Trello, Slack, Github 등을 통한 동아리 내 소통 체계 도입",
        ],
    },
    {
        title: "웹 개발 기술 학습",
        detail: "팀, 개인 프로젝트를 통한 기술 학습",
        content: [
            "팀 프로젝트를 통해 JavaScript, API 활용, 협업 등의 기초 학습",
            "개인 프로젝트 : 프론트엔드 및 웹 개발 기술 전반 학습",
        ],
    },
    // {
    //     title: "웹 프로젝트 성능 최적화 경험",
    //     detail: "",
    //     content: [
    //         "Django SSR 페이지 렌더링 속도 향상을 위한 **이미지 리사이즈 및 포맷 최적화**",
    //         "Core Web Vitals 개선을 통해 **lighthouse 평균 점수 21점 향상**",
    //         "대규모 데이터 필터링 연산을 **웹워커로 분리**하여 메인 스레드의 연산 최적화",

    //         "ISR을 적용해 독서기록 홈페이지 메인 페이지의 **초기 접속 시간 73% 단축 (1.5s -> 0.4s)**",
    //     ],
    // },
    {
        title: "개발자 경험 개선",
        detail: "",
        content: [
            "Atomic Design을 기반에 둔 파일 구조로 **컴포넌트 추가 과정 간소화**",
            "**BFF 서버**를 통해 FE의 요구사항에 맞는 데이터로 가공하여 제공",
            "**사용자 데이터 관련 Redux 로직을 커스텀 훅으로 분리**하여 관련 컴포넌트에서 상태 관리 로직 제거",
            "**accessToken 기반의 API요청 로직을 커스텀 훅으로 구현**하여 빠르게 사용할 수 있도록 개선",
            "Github Actions와 Vercel을 통해 테스트 코드 실행, Lighthouse CI를 포함한 **CI/CD** 구현",
        ],
    },
    {
        title: "커뮤니케이션은 좋은 개발자의 핵심 역량이라고 생각합니다.",
        detail: "",
        content: [
            "대학 소프트웨어 동아리에서 여러 프로젝트와 다양한 구성원으로 이루어진 팀들로 인한 혼선을 없애기 위해 Trello, Slack, Github 등 동아리 내 일정 공유 및 소통체계를 도입했습니다.",
            // "대학 소프트웨어 동아리를 운영하며 Trello, Slack, Github 등 팀 내 소통체계를 도입했고 일정과 진행상황을 공유하여 팀워크를 강화했습니다.",
            "구성원끼리의 개발 언어 능력 차이, 프로젝트 이해도 차이를 좁히기 위하여 작품 및 개발 세미나를 정기적으로 진행했습니다.",
            // "동아리 내 작품 및 개발 세미나를 정기적으로 진행하여 개발 언어와 프로젝트 이해도 향상에 기여했습니다.",
            "이를 바탕으로 여러 프로젝트들을 효율적으로 완성시켜 다양한 공모전에서 수상한 경험이 있습니다.",
        ],
    },
    // {
    //     title: "UI, UX 개선 경험",
    //     detail: "",
    //     content: [
    //         "Styled-Components의 Theme Provider로 **라이트/다크 모드 구현**",
    //         "Framer-Motion과 Intersection-Observer를 조합하여 비가시영역의 렌더링을 제거해 **프레임 드랍을 개선**하고 컴포넌트 마운트시 **부드럽게 나타나도록 구현**",
    //         "BFF 서버와 cron 캐싱으로 사용자 요청시 데이터 응답 및 로딩속도 **평균 50% 이상 개선**",
    //         "평균 5회 이상의 사용자 입력 이벤트를 debounce 처리하여 **렌더링 연산 최소 80% 이상 감소**",
    //     ],
    // },
    {
        title: "사용자 경험 개선",
        detail: "",
        content: [
            "Framer-Motion과 Intersection-Observer를 조합하여 비가시영역의 렌더링을 제거해 **프레임 드랍을 개선**하고 컴포넌트 마운트시 **부드럽게 나타나도록 구현**",
            "BFF 서버 cron 캐싱으로 사용자 요청시 데이터 응답 및 로딩속도 **평균 50% 이상 개선**",
            "평균 5회 이상의 사용자 입력 이벤트를 debounce 처리하여 **렌더링 연산 최소 80% 이상 감소**",
            "Three.js canvas에서 frameloop 및 invalidate 전략 적용으로 **애니메이션 idle 상태에서 CPU 및 GPU의 불필요한 연산 제거**",
            "ISR을 적용해 독서기록 홈페이지 메인 페이지의 **초기 접속 시간 73% 단축 [1.5s -> 0.4s]**",
        ],
    },
    {
        title: "사용자와 팀원을 모두 고려하는 개발자가 되고 싶습니다.",
        detail: "",
        content: [
            "컴포넌트 추가 과정을 간소화하고 사용자에게는 원하는 항목만 표시하는 기능을 제공하기 위해 Atomic Design을 기반에 둔 파일 구조를 도입한 경험이 있습니다.",
            "자주 사용하는 기능들을 커스텀훅, 유틸함수로 분리하고 불필요한 로직이 동작하지 않도록 세분화하여 DX와 UX를 향상시키기위해 노력하고 있습니다.",
        ],
    },
];

export default introduceData;
